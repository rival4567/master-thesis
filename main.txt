1

Introduction

1.1

Background

The manufacturing sector is driven by the need of increased productivity. The need for
efficiency, precision, safety and cost reduction has led to significant push towards automation. The industrial growth is currently pushed by the Industrial 4.0: a fourth wave of
technological advancements that is connecting sensors, machines, and other IT systems.
These connected systems, also known as cyberphysical systems, may communicate with
one another via common Internet-based protocols and use data analysis to self-configure,
anticipate failure, and react to changes. Industry 4.0 is making it possible to have flexibility in production by enabling faster and efficient processes. [8, 60]
There are nine pillars of technological advancements, namely big data and analytics,
autonomous robots, simulation, horizontal and vertical system integration, the industrial
internet of things, cybersecurity, the cloud, additive manufacturing, augmented reality.
[60]
Metal bending processes through an AMADA bending machine, used to rely heavily
upon the manual labor traditionally. Industry 4.0 is representing a transformation from
low skill manual labor to a sophisticated system that requires IT-related skills and innovation abilities in the workforce. Robotic Automation would have less variability in product
quality and will not expose operators to physical strain and repetitive motion injuries.
Collaborative robots with vision sensors [93] allows to have flexibility in manufacturing of
metal sheets. It means robot can be programmed to perform bending of different metal
sheets when required. [75]

1.2

Problem Statement

Manual bending of metal sheets is labor-intensive and can lead to human errors, resulting
in inconsistent quality and inefficiency. The automation of this process with a collaborative robot poses several challenges, which includes the precise detection and processing of
sheet metal parts, the accurate execution of the bend operation and the coordination of
the robotic system with other systems in the workcell.
A bending process has five stages, namely, unloading, alignment, bending, checking
and loading. Despite advancements in robotics and automation, many automated bending cells still require manual intervention or are only partially automated. Or they use
seperate robotic system to operate on one of the stage of the bending process, hence requiring multiple robotic mechanisms. The challenge with this research lies in automating
Page 1

CHAPTER 1: INTRODUCTION

all the five stages of the bending process with a single handling robot. Robotic perception
is required in this case for advanced error handling and collision free path planning in the
workspace.

1.3

Objectives

The objectives of this research are as follows:
1. Developing a cost-effective solution for the automated bending process, that could
replace a human operator on the bending machine while also keeping the initial
costs down. The solution should be able to handle a variety of metal sheets as a
human operator would be able to, allowing for flexibility in production.
2. Production of parts should continue non-stop without any assistance from the human operator. It means the production should’t stop during off hours.
3. The solution should have a high value of accuracy in the bending process and should
be able to self-adjust bending parameters to improve the bending process automatically.
4. There should be a possibility for remote monitoring and control of the bending
process, so that human operator could visualize and program the bending process of
a new sheet metal part variant from outside the production space, avoiding downtime
that happens during the programming of new part.

1.4

Scope

The development of robotic workcell that can be rapidly configured has a major influence
on the manufacturing industry. It allows for more flexibilty and mass customization in
production of parts. [15] Automating the bending process allows manufacturers to increase
productivity, safety, flexibility, and overall process efficiency while having the option for
customization. [60, page 9]
This thesis contributes to the broadest field of industrial automation and robotics and
shows how Industry 4.0 can transform traditional manufacturing processes. The scope
consists of:
• Programming control software for the robotic system.
• Integration of computer vision systems for the detection and inspection of metal
sheets.
• Building a web interface for monitoring and visualization.
Page 2

CHAPTER 1: INTRODUCTION
• Experimental evaluation of system performance in the industrial environment.
The thesis does not discuss other aspects of metal manufacturing or the integration of
other manufacturing processes. The programming of the second robot i.e. Franka Emika
panda robot and PLC in the robotic workcell is out of scope of this thesis.

1.5

Outline of the Thesis

The thesis is organized into nine chapters: Chapter 1 clearly defines the problem statement. Chapter 2 reviews state-of-the-art technologies in the industry for automation.
Chapter 3 and 4 describes the design and development of the robotic workcell, containing both hardware and software components. Chapter 5 discusses the programming of
the control software and web interface. Chapter 6 presents the calibration process and
evaluation of the entire robotic workcell using a specimen sheet metal part. Chapter ??
provides the results and Chapter ?? analyzes the results, discusses their implications, and
addresses potential limitations. In the end, Chapter ?? summarizes the whole thesis and
makes suggestions for future research.

Page 3

2

Literature Review

2.1

Robotic Automation in Manufacturing

Industrial robots were first used for repetitive tasks and material handling. The first
industrial robot, Unimate was deployed by General Motors in 1961. It weighed two
tons and worked on assembly lines, autonomously lifting heaving objects and welding
car parts. Since then robots have evolved to become versatile device that can perform
complex tasks, learn from experience, communicate through devices, and collaborate with
human workers. [11]
Industrial robots are the right solution for high-volume production process for their
efficiency, uptime and quality. [18] As the manufacturing industry moves smaller batch
production, cobots would be much more useful and flexible in a smart workcell. Cobots
are vastly more advanced and affordable than industrial robots. [19] Common use cases
of robotic automation in manufacturing include material handling [22, 74], welding [77],
assembly [29], pick-and-place [71], palletizing [35], and even metal sheet bending [83].
Automation is particularly useful in industrial where there is a risk for human operators. In [25], robotic automation has been implemented for the manufacturing of footwears
which is a hazardous environment for human workers. In it a robotic workcell consisting
of three robots is controlled and coordinated through ROS.
With the CPS, the machines in the robotic workcell communicate and share data with
each other with which production process is improved. Also, whole production process
can be monitored remotely.[36, page 105] With the AM technologies, design to production
time is vastly decreased. [36, page 116]. The benefits of automation can often outweigh
the initial costs. This way Industry 4.0 is transforming manufacturing sector.

2.2

Automated Bending Processes

Sheet metal bending is a process in which bends are formed using a combination of a
punch and a die. This process is used to create large number of mechanical products
such as furniture panels, shelves, cabinets, housing for electro-mechanical devices etc. [3]
The project partner for this thesis i.e. mech-tron GmbH & Co. KG excels in the
manufacturing of housing systems for electronic and embedded equipment. In this thesis,
manufacturing of one of these sheet metal housing systems will be automated by means
of robotic workcell.
There are various companies in the market which offers automated bending cells.
They use industrial robot to feed and bend the parts in the bending machine. [38, 72,
Page 4

CHAPTER 2: LITERATURE REVIEW

78] or systems to assist the bending which are called bending followers and sheet-feeder.
[24] However, using a collaborative robot to perform bending tasks is challenging. A
collaborative robot generally has low payload capacity and requires better robot motion
planning during bending to avoid exceeding joint torques. In [37], a cobot is used to
collaborate with a bending machine to perform 3D curving of metal wire and discusses
the difficulties in holding the part in low payload robot gripper during bending and defines
the generation of optimum robot motion considering the combined task and motion level
constraints.
In the article [20], two cobots from UR are used for automated bending. The cobot
can perform challenging bend sequences with the help of a regrip station. In similar way,
unloading station is used for regrasping purposes to change the way the cobot presents
the part to the bending machine.

2.2.1

ASTRO bending cell

AMADA already offers an automated solution for the bending process in means of a
system called ASTRO bending cell. This system consists of a handling robot which can
perform production of smaller, complex workpieces and have uniformity in production.
However, press brake and the know-how of handling robot come from AMADA. The
project partner has one of these systems i.e. ASTRO-100 II NT HDS 1030 in their
production floor.
The ASTRO-100 II NT cell is an “island solution” that is only available in the HDS1030 press configuration, ASTRO HP-20 loading and unloading robot, ASTRO-100 II NT
bending robot and the external software ASTRO CAM. The ASTRO-100 II NT cell. [6]
The production using these system is continous and very fast.
The main drawback of this system is the software ASTRO-CAM, which is owned by
AMADA, and offers less flexibility and requires support from AMADA for programming.
Without any vision sensors, the system is not smart. It can perform repetitive tasks
very fast and with very little interference from operator but without any decision making.
Also, the ASTRO robot is non-collaborative and humans cannot work alongside it. It
requires a large area on the production floor which incurs more cost.
In this thesis, this system will be compared to our robotic workcell solution which has
collaborative robot and is more cost-effective.

2.3

Robotic System

The real benefit of robots is taking over the three Ds, the dull, the dirty and dangerous
jobs. [30] The functionality of a robotic system during any step of control should include
three principal performance features in the cognitive process: perception, recognition and

Page 5

CHAPTER 2: LITERATURE REVIEW

decision making. It is obvious that the autonomy of the whole robotic system directly corresponds to sensory equipment, processing sensory information and decision algorithms.
[26]
Robots systems are used in industrial environments for assembling parts, painting cars
or welding operations. [62, 85]. Robots could be arranged in assembly lines to carry out
a particular repetitive task. With the development in robotic perception and algorithms,
robotic systems could be placed in a workcell to perform multiple tasks sequentially.
Sensory systems plays an important role to develop intelligent robotic systems. [85]. Using
smart sensors, a single robotic arm could perform various tasks by making decisions.
There are various kind of robotic arms available in the market. These include industrial
robots as well as cobots. Cobots are generally more sensitive and easier to program. They
are also more safe to work with humans as compared to industrial robots. Industrial
robots require an enclosed space for safety reasons. However, they are more durable and
the speed is high. [61] Robotic arm also comes in different number of DOF. 6-axis robotic
arms are mostly common, but an additional axis from a 7-axis cobot is advantageous in
our case for collision free trajectory planning in a large workspace.
A good example of cobot is the 7-axis cobot by Kassow Robots. This sophisticated
robot can mimic human movements and offers an extensive range of motion that allows it
to handle intricate tasks, navigate tight spaces, and maintain consistent product quality
in an industrial setting. These cobots not only increase efficiency and productivity but
also promote safety. They can operate in industrial environments and reduces the risks
associated with humans as they are collaborative. With the ability to work tirelessly
nonstop, theese cobots ensure continuous production and uniform quality standards. [75]

2.3.1

Robot Operating System

The Robot Operating System (ROS) is a set of software libraries and tools which help to
build robot applications. Because it is open-source, there is flexibility where and how to
use ROS, as well as the freedom to customize if it requires. [17] ROS is utilized to build,
control or simulate various kind of robots, from mobile robots to robotic arms. [33] It
could also be used in partnership with a simulation environment like Gazebo. This will
fasten the development process and also make decisions before actually buying a robot.
In [76], a simulation environment is created for mobile robots using ROS and gazebo
and later tested with the real robot, showcasing the usability of the ROS for the development process. In [45], a manipulator is simulated for the pick and place operation.
There are numerous robots build using ROS and is used extensively by both hobbyists
and robotic developers and is a powerful tool.

Page 6

CHAPTER 2: LITERATURE REVIEW

2.4

Computer Vision in Industrial Automation

Computer vision (CV) techniques have played an important role in promoting the information, digitization, and intelligence of industrial manufacturing systems. In manufacturing
industry, CV applications include inspection and quality control, object detection and
process control. In recent years, advancements in camera technology, image processing
algorithms, and CV techniques have significantly increased the capabilities of vision systems in manufacturing systems. The most common methods of CV are features detection,
recognition, segmentation, and three-dimensional (3D) modeling. [94]
CV technologies are required for the successful automation of the bending process.
KR1410 robotic arm should be able to correctly detect and pick metal sheets and then
perform precise bending operations. With CV, images can be analyzed in real-time, allowing for feedback and adjustment for the automated bending process. This capability is
necessary to maintain a high production rate while maintaining good precision. There are
many examples of CV being used in industrial environments, like in the sorting and classification of food products [9, 80, 14], monitoring and safety management of construction
projects [43] or the automated traffic monitoring system. [34, 16]
The smart extensions of CV are added to the regular cameras in the industrial environments, which improves the performance of manufacturing or other automation processes.
[12] However, it requires image processing algorithms to run on separate hardware. The
VISOR® vision sensor has a processor in its housing and does not require a PC or PLC
to run. A PC or laptop is required only in order to configure the VISOR® vision sensor.
[67, page 23]

2.5

User Interfaces for Industrial Systems

Product development process can greatly benefit from the integration of the digital twin
models. According to [64], digital twin (DT) embeds a ”virtual” image of the reality
constantly synchronized with the real operating scenario to provide sound information
(knowledge model) to reality interpretation model to draw sound decisions.
In manufacturing industry, a digital twin can replicate an individual machine, a cell,
a complete line. Digital twin and virtual commissioning are two terms that often come
when talking about Industry 4.0. Both use virtual representations of physical systems to
save time, enable better training, and identify improvement opportunities, among other
benefits. However, the digital twin requires a physical equivalent with IoT technology
for data transfer. Virtual commissioning requires simulation of all the signals with their
timings and sensors and actuator responses. It can exist without a physical system. [27]
Digital twin enables the creation of high-performance products and optimize production systems by allowing early estimations and later re-configurations. The connectivity
Page 7

CHAPTER 2: LITERATURE REVIEW

of Industry 4.0 technologies is highlighted as a key strategy for achieving the most efficient
product specifications in technical and economic terms for the manufacturer. Simulations
with a digital production twin open up new possibilities in production integration. [84]
In this thesis, virtual commissioning is first accomplished in order to speed up the
development process. The next step is to get the data from the real robotic system and
use it to test and verify the virtual model. This will be the digital twin model which will
help in:
1. Identify collision points in the real world and use it to plan trajectory.
2. Monitor and optimize the loading and unloading process.
3. Offer testing opportunities for a new product model.
A functional UI is required for monitoring and controlling robotic systems. When
envisioning the design principles for UIs, the UI should be understandable, reliable and
accessible. [91] The UI should be designed for an untrained user, offer feedback, have
robust error handling in case of system failure, and usable for users with varying levels
of experience. Web-based interfaces have gained popularity due to their accessibility and
ease of deployment. Versatile and accessible UI could be created using web technologies
and ROS for robot control. In the paper [92], a web-based interface is created that utilizes
ROS alongside HTML5, JS and C++, allows for remote control, real-time monitoring,
and 3D visualization of robots. It uses Ros3Djs library to simulate the motion of the robot
on web interface. ROS-based dashboard is also developed for an autonomous wheelchair
using Rosbridge in [28], highlighting the potential of open source technologies to build a
DT.

Page 8

3

System Design

3.1

Overview of the Robotic Workcell

Robotic workcell has to be designed keeping in mind the workspace of handling robot.
Handling robot has to able to reach every station in the workspace without any collision.
The workcell is first developed in simulation with the use of ROS and gazebo software.
This reduced the development time as it allowed for quick changes to the workcell.
The preliminary designs for the robotic workcell were elaborated in the form of CAD
models and successively converted into final CAD designs. These CAD models were later
converted to suitable file format like .stl and .dae for the simulation software ROS. These
meshes are then utilized to build up the whole workcell in ROS and gazebo. Robot is
defined in URDF file format that includes the physical description of the robot. [90]
This simulated environment in gazebo is used to update and fix the final layout of the
robotic workcell. Trajectories are planned to various subsystems in workcell using ROS
to determine to final position of robot in workcell. Figure ?? shows the final layout of
the workcell in gazebo software. It consists of various subsystems which include bending
machine, storage station, unloading station, handling robot, bending machine terminal
operating robot and safety fence.
The subsystems are described in more detail in the following subsections.
Sheets are loaded by workcell operator in the unloading station. Sheet metal parts are
picked up by the handling robot and taken to bending machine to perform bending. After
all the bending operations are complete, sheet metal parts are stored in storage station.
The relation between each subsystem and the flow of energy, data, and material is shown
in Figure ??.

3.1.1

Bending machine

Bending machine as a unit comes with a terminal and a foot pedal. Terminal is used to
operate the bending machine for starting, stopping and configuring the bending machine
and also loading the bending program. Foot pedal comes with two pedals, one for closing
the bending machine and other for opening of the bending machine. Opening and closing
of bending machine is controlled by a foot pedal for the manual bending operations.
To automated the bending machine, PLC is used to send signals to foot pedal which
in turn, controls the opening and closing of bending machine.
An inspection camera is also added to measure the bending angle after each bending
operation. This inspection camera is operated by the PLC and the bending angles are

Page 9

CHAPTER 3: SYSTEM DESIGN

saved in .csv file format and displayed on a HMI.

3.1.2

Storage station

The storage station is a shelf with 10 drawers. The drawers of the shelf can be automatically opened and closed by the handling robot. It is a mechanical system which is used
to store final bended sheet metal parts.
When the storage station is full, human operators are to replace a filled shelf with a
new empty shelf with a forklift. Thus, this is the only station which is not fixed in the
robotic workcell. The robotic camera mounted on the handling robot needs to determine
the correct position of the storage station after each restart.

3.1.3

Unloading station

The task of the removal station is to take a single sheet metal part from a stack of
raw sheets and make it available to the robot unit. This is a mechatronic system with
several different components, which all have to function individually, but also together in
combination. The mechatronic system is controlled by the PLC.
This unloading station is on top of a cabinet which houses the PLC and controller of
the handling robot.

3.1.4

Handling robot

Handling robot is the primary robot which handles the sheet metal parts to different
subsystems i.e. unloading station, bending machine and storage station. It coordinates
with the PLC to make decisions during the execution of the program. Reachability is very
important in this case, as it should be able to handle sheet metal parts in any orientation.
A two finger gripper is used for grasping the sheet metal parts.
To get accuracy with the bending process, detection of features on the sheet metal
parts is required. A robotic camera is mounted of the robot for this purpose. In this way,
handling robot can be trained to operate with different variants of sheet metal parts.
ROS simulations of the handling robot is done to determine the performance of robot
in the workcell. The drawers of storage system is especially close to the production floor
and the robot requires some space to move around without getting stuck. Reachability is
tested with the simulation of trajectories before the final integration of the real robot in
the workcell.

3.1.5

Bending machine terminal operating robot

Together with the company VisCheck GmbH, an operating unit is developed for entering parameters on the operating terminal and reading relevant values on the operating
Page 10

CHAPTER 3: SYSTEM DESIGN

terminal of the bending machine. The unit consists of a franka emika robot, a camera for
reading terminal values and a computer for controlling the robot. A touch screen pointer
is attached to the gripper of the robot for operating the touch screen of terminal.
As it is programmed by another company, it is not simulated in the software and not
coordinated for any trajectory planning. Sufficient floor space is left near the terminal of
bending machine in the robotic workcell for the installation of this robot. The trajectories
of handling robot are not planned anywhere near this robot. To setup this, safety zone is
created during the programming of the handling robot.

3.1.6

Safety fence

Safety fence marks the boundary of the robotic workcell. Even though the robot finalized is a collaborative robot, bending machine poses a safety concern as it is operated
automatically by the PLC. The sheet metal parts are sharp around the corners and when
handled by the robot is deemed as not safe.
Two doors are installed for an entry in the robotic workcell. One is close to the storage
system and is used to move shelf in-and-out of the workcell by a forklift. The doors are
installed with a safety mechanism by which if the door is open, the whole robot unit and
bending machine cannot operate. This safety mechanism is again controlled by the PLC.
Safety fence is only installed at the end of the project by the company. A simulation of
the fence with ROS and gazebo is not necessary in this case and is not included as assets
in gazebo.

3.2

Requirements for the overall system

1. A key requirement for the mobile robot unit is to be able to cope with the limited
space available in the project partner’s production hall. Specifically, this means that
only an area of approximately 2m × 4.5m is available in front of the sheet metal
bending machine.
2. Another point is the operating time of the overall system. The unit should be able
to autonomously manage a day shift of eight hours and a night shift of six hours
without any major personnel intervention.
3. Robot should also be able to handle various sheet metal part variants, i.e. different
component sizes and geometries. In addition to the flexible handling of different
sheet metal parts, the focus is also on the simple integration of new variants into the
existing system. Some of the sheet metal parts in production are of small size. These
sheets will have little gripping surface after few bendings. Special considerations
needs to be given to the gripper design so that robot can handle sheet metal parts
Page 11

CHAPTER 3: SYSTEM DESIGN

of small and medium sizes. (from 60mm × 110mm to upto 115mm × 220mm) The
sheets should not move in the gripper during the movement of the robotic arm.
4. The mobile robot unit is to be used as a supplement to manual production. It is
therefore necessary that it can be set up and dismantled quickly and easily in front
of the bending machine.
5. The hand-eye calibration using a vision sensor could degrade over time due to environmental factors such as temperature changes or vibrations. [7] This will decrease
the accuracy of robot TCP in positioning and grasping leading to incorrect bending.
The robot should be able to automatically recalibrate without any long delays when
there is a request by the operator.
6. The angle measurement on the bent sheet should be carried out using a camera
system after each bending process. Based on the measured angle, bending machine
should be re-adjusted for the next iteration. The necessary values should also be
entered at the operator terminal by the terminal operating robot. In addition,
a continuous real-time status query of the bending machine is required via the
operating terminal. For the implementation of this subtask, the company is working
with VisCheck GmbH, which specializes in reading screens using a camera and
making entries via a robot.

3.3

Hardware Selection

3.3.1

AMADA bending machine

A bending machine that is manufactured in 2005 and no longer in production is chosen
for this project. The bending machine from AMADA is a manual hydraulic press brake
that is operated by foot pedal. It does not comes with a system that allows for automated
bending process. Table 3.1 shows the technical specifications of the bending machine.
The AMADA bending machine allows for programming the 5-axis backgauge in the
bending machine. It means for a specific bending operation, the tool and die the 5-axis
backgauge moves in position accordingly and holds the sheet metal part in place. It is also
possible to change bending operation by selecting the bending operation number from the
terminal. This is done by the controller i.e. AMNC of the press brake.
It is also possible to quickly change a tool in the bending machine. It has a punch
holder system which allows quick and secure tool changes. The hydraulic system provides
the force needed for the bending operations. The hydraulic system does not have any load
upto a set point below which it start bending. This allows for an extremely fast approach
and return speeds. [5]

Page 12

CHAPTER 3: SYSTEM DESIGN

Description

Value

Model
Manufacturer
Year of manufacture
Drive
Pressing capacity
Working length
Distance between frames
CNC control

HFP 50-20
AMADA (France)
2005
Hydraulic press brake
500 kN
2090 mm
1665 mm
AMADA AMNC 3D-graphic
with TFT color screen
Y1/Y2; X1/X2; R1/R2; Z1/Z2
470 mm
200 mm
10 mm/s
100 mm/s
100 mm/s
FIESSLER
3458 mm x 2450 mm x 2450 mm
4850 kg

controlled axes
Open height
Stroke
Bending Speed
Approach Speed
Return Speed
Laser monitoring
Length x width x height
Weight

Table 3.1: Bending Machine Technical Specifications (Source: [4])
The bending machine has a laser monitoring device as shown in ?? This device from
Fiessler GmbH come pre-installed with the bending machine and is a press brake safety
measure. It stops the closing of bending machine if a finger or something else is detected
inside the bending machine.

3.3.2

Kassow Robots: KR1410

KR1410 is a 7-axis collaborative robotic arm from Kassow Robots. It has a reachability
of 1400 mm which fits satisfactory in the workcell. A seventh axis is particulary useful as
it allows more freedom during trajectory planning especially in close spaces. Five out of
seven joints could do two full rotations.
The robotic arm comes with a robot controller and a teach pendant as shown in Figure
?? A robot controller is the main controlling unit for each KR manipulator. Teach Pendant
is used for programming the manipulator and also provides UI and safety controls. The
robot can be operated manually and automatically. It is automated, programmable and
capable of moving in up to seven axes. The robot is typically used for welding, painting,
assembly, pick and place, packaging and labelling. These are all carried out while ensuring
high endurance, speed, and precision. [49, page 23]
Kassow Robots can be integrated with other devices via Profinet. Each robot that
is equipped with optional Profinet HW interface can act as a Profinet IO-Device. This
Page 13

CHAPTER 3: SYSTEM DESIGN

Description

Value

Type
Repeat accuracy
Reach
Number of axis
Operating temperature range
Weight
AC Power connector
Typical Power consumption
Supply voltage
Supply current
IO power supply
Max. joint speed
Max. static force on TFC (payload)
Max. static torque on TFC
Sound level
Ingress protection
Joint ranges

Collaborative
0.1 mm
1400 mm in all directions
7-axis
0-45°C
38.0 kg
1 Phase CEE
400-1200W
100-120 and 200-240 VAC (50/60hz)
16A
24 VDC
163/225 °/s
10 kg
25 Nm
Below 70dB (A)
IP54
Joint 1,3,5,6,7 +/- 360°
Joint 2,4 -70/+180°
160 × 160 mm
Available

Footprint
ROS Support

Table 3.2: KR1410 Technical Specifications
means that such robot can be monitored and controlled by any Profinet IO-Controller (for
example PLC). [44] KR1410 could be also interfaced with ROS. KR provides packages to
install through which KR messages communication is set up to a PC. These messages are
used to get the current joint configuration of the robot and simulate it in ROS or web UI.
[51]
KR also provides developmental environment to add new robotic peripherals, like
grippers or sensors. This development environment is CBun, which allows writing KR
software in C++ for a specific peripheral. It is used in order to setup communication
between VISOR camera functions and the robot. [48]

3.3.3

Camera System: VISOR® Vision Sensor

According to VISOR® [67, page 22] user manual, the VISOR® vision sensor is an optical
sensor and is used for the non-contact acquisition or identification of objects. The vision
sensor features a number of different evaluation methods (detectors), like contour, pattern
matching, Target Mark 3D, BLOB and others. The VISOR® vision sensor is a costeffective alternative to conventional image processing systems as discussed in section 2.4
The processing is done inside the camera housing only. It is a combination of sophisticated
Page 14

CHAPTER 3: SYSTEM DESIGN

hardware and easily configurable sofware. [65]
Description

Value

Operating Voltage
Startup time
Current consumption
Interfaces

24 V DC (18 V - 30 V)
< 14 s
≤ 300 mA
100 Mbit LAN, PROFINET,
EtherNet/IP, SensoWeb
Approx. 200 g
0◦ C - 50◦ C (80 % humidity,
non-condesing)
IP 65/IP 67 EN 60529
Die-cast aluminium
V20
s 1440 × 1080
1/2.9′′
3.4 µm × 3.45 µm
CMOS Mono / Color
LED Red
Red, laser class 1
6.5 (Wide)
Motorized

Weight
Ambient air temperature operation
Protection Class
Housing Material
Camera type
Number of pixels (H × V)
Sensor size
Pixel size
Technology
Light type
Target laser
Integrated Lens, focal length
Focus (Working distance)

Table 3.3: VISOR® Technical Data (Robotic and Object Camera)
VISOR® vision sensor is a suitable choice for the identification and classification of
metal sheets for the automated bending process. These sensors enable precise detection
and processing of features on sheet metal parts, which leads to the efficiency and accuracy
of automated bending process. The camera can be connected to a PLC or PC through
ethernet or profinet. The VISOR software is installed on the PC and then the camera
can be configured and jobs can be added.[68]. A total of 255 jobs with 255 detectors each
can be configured on the camera.
Two camera are selected from SENSOPART. One for the robot which is used to detect
the sheet metal parts and the target mark; and the other for inspection jobs.
1.

Robotic Camera

This camera is a VISOR® Robotic V20 vision sensor with 1440×1080 resolution, wide lens
and a red LED light. [70] A hand-eye calibration is required in order to transform camera
poses to robot frame. This camera does not use internal illumination to detect objects as
the working distance is 300.0 mm which is large enough for internal illumination to full
brighten the sheet metal part. A tailored interface is developed for KR teach pendant for
this camera to make it communicate with the robot using CBuns.
Page 15

CHAPTER 3: SYSTEM DESIGN

2.

Inspection Camera

The inspection camera is a VISOR® V20 Object vision sensor with 1440×1080 resolution
and red LED light. [69] This camera gets the bending angle of the bent sheet metal part.
The robot brings the bent sheet metal parts to the inspection camera. It uses internal
illumination of red light to measure the angle as working distance is only around 100
mm.

3.3.4

PLC

PLC A programmable logic controller (PLC) is a special form of microprocessor-based controller that uses programmable memory to store instructions and to implement functions
such as logic, sequencing, timing, counting, and arithmetic in order to control machines
and processes. [10, page 5] It is an industrial computer that has been ruggedized and
adapted for the control of manufacturing processes, such as system monitoring, motor
control, workcells, or any activity that requires high reliablity, ease of programming, and
process fault diagnosis. [2]
PLC from the manufacturer Siemens are called SIMATIC Controller. [73] A SIMATIC
HMI is also added to the top of front panel of the unloading station to provide revelant
information to the operator as shown in figure ?? PLC is used to manage everything in
robotic workcell, from giving instructions to the KR to controlling the bending machine
and unloading station.

3.3.5

Gripper

The gripper is selected according to payload, gripping force and opening width. The
opening width is the dominant selection criterion here, as the gripper must be able to
grip both the thin sheets with thicknesses of around 1 to 3 mm and the handle on the
drawers with a width of 15 mm. An electric gripper was considered, as the power supply
could have been provided via the cable already integrated in the robot. Due to the higher
costs, the double height and the weight, a pneumatic gripper was chosen.
A universal schunk gripper PGN-plus-P 80-1 is chosen which is a 2-finger parallel
pneumatic gripper with permanent lubrication, high gripping force, and high maximum
moments due to the use of a multi-tooth guidance. [63] It is also possible to know if the
gripper is open or closed because of a sensor inside the housing of gripper. This value of
sensor is sent to the PLC to detect if the gripper is closed.
1.

Robotic Gripper

The robotic gripper is mounted on the KR1410. This gripper is used for grasping the
sheet metal parts, perfrom bending operation and opening or closing the drawers of shelf.
Page 16

CHAPTER 3: SYSTEM DESIGN

Description

Value

Closing Force
Stroke per jaw
Min. operating pressure
Max. operating pressure
Opening force
Weight
Opening time
Closing time
Repeat accuracy
Size (L × W × H)
Min. Ambient temperature
Max. Ambient temperature

550.0 N
8.0 mm
2.0 bar
8.0 bar
610.0 N
0.51 kg
0.035 s
0.035 s
0.01 mm
96.0 × 42.0 × 49.0 mm
5.0°
90.0°

Table 3.4: Schunk gripper technical details (Source: [63])
2.

Unloading Station Gripper

The pneumatic parallel gripper is mounted on the pneumatic swivel unit which can turn
180°. This allows the transfer the sheet metal part from unloading station to the robotic
gripper.

3.4

Software Architecture

To find out the software version and development environent used in the development of
the workcell, check the appendix ??.

3.4.1

Simulation Software

Before building the robotic workcell in the real world, the kassow robot is simulated in
the ROS and gazebo software environment.
1.

ROS

For more information on ROS, see section 2.3.1. A URDF model of the KR1410 with
gripper attached is created complete with all positions of links, joints, sensors, models
etc. This URDF description of robot is then ready to be tested in the workcell. Few
open-source additional packages were also used for building this simulation. For example,
for attaching an object to the finger joint which simulates a grasping action in gazebo
simulator. [13]
The robotic motion of unloading station gripper and the manipulation of KR1410
using the robotic gripper is simulated using ROS. (See Figure ??)
Page 17

CHAPTER 3: SYSTEM DESIGN

Many custom ROS packages [53] are created to simulate the workcell. A single ROS
launch [55] file is launched to run every node [57], service [56] and parameter [54] or action
servers [59] Figure ?? visualizes the computation graph of the simulation. It shows the
currently active ROS nodes [57] and topics [58] in the simulation of robotic workcell.
2.

Gazebo Simulator

Gazebo is a 3D dynamic simulator with the ability to accurately and efficiently simulate
populations of robots in complex indoor and outdoor environments. While similar to
game engines, Gazebo offers physics simulation at a much higher degree of fidelity, a suite
of sensors, and interfaces for both users and programs. [23]
A model of the entire workcell is created for the gazebo simulator. The assets are
converted from CAD designs to .dae and .stl file format using blender software. These
meshes are then included in the SDF model object. The workcell is then ready to be
simulated in the gazebo simulator.
3.

RViz

RViz is short for ROS Visualization. It is a 3D visualization software tool for robots,
sensors, and algorithms. It allows seeing the robot’s perception of its world (real or
simulated). The purpose of RViz is to visualize the state of a robot. It uses sensor data
to try to create an accurate depiction of what is going on in the robot’s environment. [40]
4.

MoveIt

MoveIt is a software for ROS used for manipulation, motion planning, 3D perception,
kinematics, control and navigation. [39] MoveIt is used to get the solve the kinematics of
the 7-axis kassow robot and do robotic manipulation and perception. A collision mesh of
the workcell is published in the planning scene as can be seen in RViz in Figure ??. This
makes the KR1410 to plan trajectories without any collision in the workcell. The robotic
gripper is also controlled using MoveIt package.

3.4.2

VISOR Communication Setup

VISOR software is not officially supported by the KR1410 and there is no direct integration of the VISOR camera available. However, Kassow robots provides support to build
own software through CBun development. The CBun (Capability Bundle) represents a
modular framework within the KR software system, which encapsulates functionalities
and provides the access to its predefined API.
The CBun SDK is the Software Development Kit that provides all essential tools
for CBun development. The project setup is created in a Visual Studio Code container

Page 18

CHAPTER 3: SYSTEM DESIGN

running on Ubuntu 18.04 with a special set of software packages. [48] The header files are
located in include directory and C++ source file i.e. VISOR Communication.cpp are
placed in src directory. Upon building the project, a SENSOPART.cbun file is generated
as shown in ?? It is then installed in the teach pendant using a USB.
CBun device is one of the CBun elements. CBun Device concept allows to wrap
handling code of physical device like VISOR vision sensor into the CBun and hide it from
the end user. This allows the user to simply control and monitor devices without the need
to implement the communication and logic. [47]
VISOR camera is powered from the TPSU02 on the KR1410 tool-IO. A CBun device
named VISOR from CBun developement is created which has methods for controlling
the functionalities of camera like changing job, getting object pose by triggering camera
and performing calibration. Through this device, the KR communicates with the VISOR
over telegram. Figure ?? shows the setup of telegram with the correct start, trailer and
separator characters, and also the transfer of data which only happens in the format of one
integer and one pose value. The integer value is used for now to determine if the camera
has detected the object while the pose value is used to send the pose of the detected
object. Integer value of 1 means the camera has detected the object and 0 means not
detected.

3.4.3

Program Tree

Kassow Robots teach pendant is a graphical user interface which allows users to control
robot arm and HW equipment, build and run programs and configure robot installation
setup. It is intended to be intuitive as it comes with familiar design of a tablet. The
main screen interface is based on a double pane layout between which there is a command
box. The command box provides access to basic building blocks, loaded CBun devices,
and subroutines defined by the operator. These commands can be dragged and dropped
into the program tree. [52, page 15] There is a control mode in the bottom which can
set the master speed or launch the program and control the execution process. (pause,
continue, terminate). The program tree view is where the robot program is built in
an intuitive graphical way. A program tree contains atleast one sequence. A sequence
contains a number of commands that are executed sequentially. For separate sequences,
the commands are executed simulataneously and asynchronously. [52, page 20]
The programming of KR1410 is done in the program tree for one sheet metal part
variant. It is done so as to test the bending process using the KR1410. The program
tree of the workcell consists of four sequences which runs in parallel. Sequence 1 is the
main program which runs all the pick-place and bending operations. Sequence 2 and 3
looks for a signal from PLC for pausing and terminating the current program respectively.
Sequence 4 controls the robotic and unloading station grippers using a push button for

Page 19

CHAPTER 3: SYSTEM DESIGN

manual operation of the gripper in case of emergency.
The robot is programmed using a number of subprograms such that a subprogram can
be quickly imported in the sequence and is intuitive to understand as shown in figure ??
Besides normal RCommands like IF, LOOP, FOR, MOVE, WAIT and so on, there are a
number of CBun devices from Kassow Robots imported like the IK, FK and WATCHER
devices. IK is used to get the inverse kinematics from a pose and FK is used to get the
forward kinematics from a joint configuration. Custom made Cbuns modules for VISOR
are also used for auto-calibration and for getting the pose in the robot frame of a detected
object in the workspace using the VISOR vision sensor.

3.4.4
1.

Web UI

Front-end technologies

Front-end development is the development of visual and interactive elements of a website
that users interact with directly. It’s a combination of HTML, CSS and JavaScript, where
HTML provides the structure, CSS the styling and layout, and JavaScript the dynamic
behaviour and interactivity. [32]
Reactjs is the most popular front-end JavaScript library for building user interfaces.
React can also render on the server using Node and power mobile apps using React Native.
It user interfaces out of individual pieces called components written in JavaScript. [46]
2.

Backend technologies

Backend development refers to the server-side aspect of web development, focusing on
creating and managing the server logic, databases, and APIs. It involves handling user
authentication, authorization, and processing user requests, typically using backend development languages such as Python, Java, JavaScript (Node.js), and .NET. [31]
Node.js is an open-source, cross-platform JavaScript runtime environment that lets
developers create servers, web application etc. The web application for robotic workcell
is built and hosted on a Node.js server. [41]
npm is a package manager for Node.js. It stands for Node Package Manager. Through
this, ROS web tools for server-side runtime are installed like roslib, ros3djs. [42]
3.

ROS Web Tools

Robot Web Tools are open-source libraries and tools for building web-based robot apps
with ROS. Rosbridge, roslibjs, ros3Djs, and visualization-rwt packages are used for build-

Page 20

CHAPTER 3: SYSTEM DESIGN

ing the web application which are part of ROS Web Tools. [81] Rosbridge and visualizationrwt are installed on the ROS workspace for robotic workcell. Roslibjs and ros3Djs are
libraries for building the web application and are installed on the server built on Node.js.
Rosbridge The WebSocket makes it possible to open a two-way interactive communication session between the user’s browser and a server. With this API, messages can be
sent to a server and received through event-driven responses without having to poll the
server for a reply. [82] Rosbridge provides a websocket interface to ROS systems. It will
provide interface to front-end technologies like ReactJs which builds the UI and publishes
a web application. Rosbridge suite is a meta-package containing rosbridge, various front
end packages for Rosbridge like a WebSocket package, and helper packages. [87]
roslibjs provides base dependencies and support libraries for ROS. roslib contains many
of the common data structures and tools that are shared across ROS client library implementations. [88] It will provides support to interact with basic ROS functionalities like
topics, services, parameter servers and others.
ros3djs is the standard JavaScript 3D visualization manager for ROS. It is build ontop of roslibjs and utilizes the power of three.js [79]. Many standard ROS features like
interactive markers, URDFs, and maps are included as part of this library. [86]
visualization-rwt package is a suite of nodes for web based robot visualization. It
provides nodes for controlling the robot using MoveIt through web application. [1]

Page 21

4

Hardware Integration

4.1

Installation and Configuration

After testing and simulating the system design in the simulation software, construction
and installation of individual systems begin. This section explains the installation and
configuration of each system with their individual components, while also explaining their
functionality.

4.1.1

Detection marker

Detection marker is a 15 × 13 200 mm pattern that is used to determine the pose of a
system placed in the workcell using the VISOR® vision sensor mounted on the KR. The
pose represents the position and orientation in 3D space. In total, there are ten markers
in the robotic workcell. One each for bending machine unit and unloading station; and
ten markers for the storage station.
In addition to get the pose, detection marker is used as calibration plate for auto
calibration of camera w.r.t. TCP.

4.1.2

Bending machine unit

Bending machine is set to operate automatically by controlling the foot pedal with PLC.
To automate the bending process, several devices and components are installed on the
bending machine. Bending machine is operated freely upto a certain point i.e. without
any pressure and only starts applying pressure when it is in contact with the sheet metal
part. Figure ?? shows these components.
1.

Marker

Detection marker mounted on the bending machine. This pose is used as reference frame
for all three bending stations. Since the bending machine is fixed, this marker is also used
for auto calibration of the robotic camera.
2.

Bending machine open height measurement sensor

It is important to know exactly the current open height of the bending machine. This
value tells the KR to open the pneumatic parallel gripper as sheet starts bending at a
bending station to avoid any deformation in the sheet. Once the bending is complete, the
KR can move out safely without any collision if a set-point on the open height is reached.
Page 22

CHAPTER 4: HARDWARE INTEGRATION

For this, a laser sensor is mounted on the bending machine which measures the open
height of the bending machine. The sensor values are sent to the PLC. KR makes decision
to do bending operation based on this laser sensor value.
3.

Bending station

There are three bending stations in the bending machine. Each bending station has a
different set of punch and die. Bending station 1 is used to achieve a bending of 90°.
Bending station 2 bends the sheet metal part at an angle of 135°. And finally, bending
station is used to press down the sheet and make it flat.
These three stations are enough for the sheet bending operation. KR1410 will take
the sheet metal part to one of these bending station to perform a bending of a particular
angle. A sheet metal part could require the use of one or more of these bending stations.
4.

Terminal Fixture

The bending machine comes with a terminal which is used to operate the bending machine.
However, this terminal is free to rotate and move. It is required to fix the movement of
terminal, so that terminal operating robot could operate reliably. The fixtures made from
aluminium profiles fixes the bending machine terminal.

4.1.3

Robot unit

The robot unit consists of three assemblies: a base, a robot and an end-effector. (Figure
??). The robot is a manipulator from kassow robots with pneumatic parallel grippers
as the end-effector. Pneumatic gripper is controlled by PLC. VISOR® camera is also
mounted on the tool-IO which is used for robotic perception.
1.

Robot base

The base is a simple welded construction made of steel. The choice of steel material
ensures that the base has sufficient dead weight so that it can be transported together
with the robot and gripper using a pallet truck without the risk of tipping over. During
operation, the robot unit is fixed to the floor with four M12 screws.
2.

KR1410 manipulator

The robot used is a 7-axis robot from Kassow Robots with model KR1410. This robot
model fulfills the requirements defined in the section 3.2. Simulations have shown that
this robot is above to reach even the lowest drawers of the shelf of the storage station.
Two full rotations (720°) of five out of seven joints allows complex motions in limited
space. A flexible conduit containing pneumatic hose for the pneumatic parallel gripper
Page 23

CHAPTER 4: HARDWARE INTEGRATION

and communication cabel for the camera goes around the manipulator to reach the endeffector.
3.

Manual quick-change system

The gripper is attached to a manual quick-change system. The manual quick-change
system makes it possible to exchange different gripper designs in a short time and without
increased effort if required for a sheet metal part type. Sheet metal part is folded into
something like a box. The quick-change system also has an electric and pneumatic power
feed-through, which ensures simple, user-friendly changeover.
4.

Robotic Gripper

The gripper is a Schunk pneumatic parallel gripper. It is powered and controlled by
the Tool-IO board on the KR1410. The robotic gripper grips an object with an applied
pressure of five bar. This is enough to hold the sheet metal part in place during motion
of the arm. The fingers are made from aluminium material and finger tips are 3D printed
using a FDM printer. The tips are worn out after some period of time, but are easily
replacable by 3D printing. In the program tree, the center of finger tips sets the TCP for
the robot and is 216 mm from the TFC.
5.

Robotic Camera

A camera system is installed on the robot itself. This is used to determine the relative
position between the robot unit and the unloading station, bending machine and storage
station using the markers and between the robot unit and the sheet metal part (when it
is first made available at the unloading station or is gripped) using features on the sheet
metal part. As the working distance of this camera is large 300mm, using external light
source is required to protect against ambient light. This is because light reflections or
changing extraneous light can distort evaluation results.

4.1.4

Storage station

The storage station is a shelf of 10 drawers and is constructed entirely from aluminum
profiles. At the heart of the storage box are the modular drawers, which consist of a
universal basic construction and individual sheet metal part support plates. The basic
construction consists of an aluminum profile frame, two telescopic rails and a locking
mechanism, which prevents the drawer from moving unintentionally when pulled out or
pushed in. Due to the greater need for profiles and connection technology, the costs for
this construction method are somewhat higher, but the storage box can be manufactured

Page 24

CHAPTER 4: HARDWARE INTEGRATION

precisely as a result, which will have a positive effect on process reliability later when the
sheet metal parts are stored.
The individual drawers could be pulled out using telescopic rails automatically by the
robot. The individual drawer is a 30 mm thick plate with regularly arranged recesses,
which enables the finished sheet metal parts to be placed in a defined position for the
robot unit. For weight reasons, plastic was the only material considered and the drawers
are printed using AM. Due to the possibility of customizing the sheet metal part carrier
plate, the focus of the design implementation was on designing a carrier plate that can
be used for several sheet metal part variants at the same time. On the one hand, this
saves material resources, and on the other hand, different sheet metal part carrier plates
do not have to be kept in stock or the storage boxes do not always have to be converted
when changing products.
Each drawer has its own locking mechanism. This is operated with a handle on the
front by turning it clockwise or anticlockwise. The handle also serves as a gripping object
for the robot unit, by means of which the drawer can be pulled out or pushed in. In
addition to this locking mechanism, each storage box has a locking bar across all drawers.
This is intended to serve as an additional safeguard when the boxes are moved between
different factory halls and/or over longer distances using a forklift truck. In addition, each
individual drawer is equipped with a detection marker pattern that is used to determine
the spatial position using the camera on the robot unit. This is required for the reliable
depositing of the sheet metal parts.

4.1.5

Unloading station

Figure ?? shows the elementary components of this station.
1. A marker is attached to the unloading station through which robot get the exact
position of the unloading station.
2. Similar to the storage station, the raw sheets are stored on a pull-out drawer. This
also consists of a universal basic construction and an individual perforated grid
plate. Depending on the type of sheet metal part, the blanks can be stacked on this
perforated grid plate. The sheet metal parts can be held in place by means of sheet
metal brackets that are screwed to the plate. Telescopic rails are also used here.
Because the drawer does not have to be opened by a robot, but only by a person,
rails with integrated locking mechanisms are used. Pulling out the drawer ensures
ergonomically simple filling. The drawer position is monitored using a position
switch. A gantry robot with a working area of 400 × 1000 × 250mm is to be used
for destacking.

Page 25

CHAPTER 4: HARDWARE INTEGRATION

3. As with the robot unit, different grippers (vacuum grippers, magnetic grippers, etc.)
can be installed very quickly using a manual quick-change system, depending on the
type of sheet metal part.
4. After the gripper has unstacked a raw sheet, it is transferred to a pneumatic 180°
swivel unit as shown in figure ??, which in turn is equipped with a pneumatic parallel
grippers. From there, the raw sheet is finally picked up by the robot unit described
in the previous subsection 4.1.3 after the exact position has been determined with
the camera on the robot. In order to achieve reliable and precise positioning, a dark
material is installed as background below the swivel unit.
5. As there is ample space between robot and unloading station, the inspection camera
is installed directly on the unloading station as shown in figure ??. The robot comes
in front of inspection camera after each bending to get the bending angle.
6. All electronic components such as fuses, power supply units, etc. of the entire
mobile robot unit, i.e. not just those of the unloading station, are installed in several
control cabinets below the gantry. This allows the unloading station to be used more
flexibly later on different sheet metal bending machines. The same is planned for
the pneumatic components such as switching valves, pressure regulators, pressure
gauges, etc. Due to the flexibility and the space still available, the KR controller
will also be placed in the back-side of this station.
7. The front panel of unloading station has an HMI, an emergency stop button and
the robot’s teach pendant. Since the robot auto-starts the program when the power
is turned on, the teach pendant is not used during operation. However, it is placed
there for debugging or testing a new robot program.
8. An HMI control unit from Siemens is installed for the operation (start, pause, stop,
etc.) of the entire robotic workcell and as a source of information about relevant
process values, such as the number of sheets processed or failed in the current batch
as shown in figure ?? The protective fence is attached with the unloading station,
but contains a recess so that the HMI can be used at all times.

4.2

System Networking

PLC is used to control the subsystems in the robotic workcell. PLC controls the bending
process by controlling the bending machine, operates the unloading station to get new
sheet metal parts to the unloading station gripper using the gantry robot, triggers the
inspection camera for testing the bending process and cooperates with the KR1410 to
select the correct bending task. To achieve all of this, communication needs to be setup
Page 26

CHAPTER 4: HARDWARE INTEGRATION

between various subsystems. Figure ?? shows the networking diagram between various
devices in the workcell. ROS PC has not been commissioned in the robotic workcell, but
a setup could easily be made by connecting an ethernet cable between robot controller
and laptop.
Input Register

Function
Bit

Bit[0]
Bit[1]
Bit[2]
Bit[3]
Bit[4]
Bit[5]

open or close unloading station gripper
open or close robotic gripper
bending start request/release
inspection camera trigger request/release
robot active
sheet request
Integer

Int[0]
Int[0]=0
Int[0]=1
Int[0]=2
Int[0]=3
Int[0]=4
Int[0]=5
Int[0]=6
Int[0]=7
Int[0]=8
Int[0]=9
Int[0]=10
Int[1]
Int[1]=0
Int[1]=1
Int[1]=2
Int[2]
Int[2]=0
Int[2] is not 0

Current robot state in program
Not ready or failure
getting to ready pose
waiting for new sheet
performing bending operation 1
performing bending operation 2
performing bending operation 3
performing bending operation 4
performing bending operation 5
performing bending operation 6
placing sheet metal part in shelf
performing calibration
Robotic camera trigger state
no trigger
successful, object detected
failure, object not detected
Robotic camera operation state
Working
Not working, camera restart required

Table 4.1: Sending data from KR1410 to PLC over Profinet

4.2.1

Communication between KR1410 Robot and PLC

The communication between the PLC and KR1410 is established over Profinet, a leading
industrial ethernet protocol for communication between devices in industrial automation
systems. Profinet (usually styled as PROFINET, as a portmanteau for Process Field Net)
ensures real-time data transmission and supports various network topologies. [44]
Page 27

CHAPTER 4: HARDWARE INTEGRATION

Output Register

Function
Bit

Bit[0]-Bit-[7]

Bit[0]
Bit[1]
Bit[2]
Bit[3]
Bit[4]
Bit[5]
Bit[6]
Bit[7]
Bit[8]
Bit[9]
Bit[10]
Bit[11]
Bit[12]
Bit[13]
Bit[14]
Bit[15]

trigger for bending machine reaching a
certain open height value determined
using laser sensor
Bending operation 1 started
Bending operation 2 started
Bending operation 3 started
Bending operation 4 started
Bending operation 5 started
Bending operation 6 started
Bending finished, take out sheet
Bending machine fully open
Start bending sequence program
Sheet metal ready in unloading
station gripper
Correcting bending machine sequence
using terminal robot
Inspecting requested
Pause program
Calibration requested
Terminate program
Storage station secured
Integer

Int[0]
Int[0]=0
Int[0]=1
Int[0]=2
Int[1]=1-10

Inspection Results
Waiting for results
Successful
Failure
Start placement from drawer

Table 4.2: Sending data from PLC to KR1410 over Profinet
A number of robot data can be monitored and controller through PLC over Profinet.
These include monitoring of system state, joint configuration, TCP kinematics, IO Board,
Tool IO state, and controlling of master speed, IO Board, and Tool IO outputs. The
profinet also allows the transfer of data from Robot to PLC over user defined 64 Bit
Input, 24 Int Input, 24 Real Input and from PLC to Robot over 64 Bit Output, 24
Int Output and 24 Real Output. [50] Table 4.1 and 4.2 shows the defined variables for
cooperation between PLC and KR1410 which are shared over profinet.

Page 28

CHAPTER 4: HARDWARE INTEGRATION

4.2.2

VISOR Communication Protocols

Both VISOR camera has been configured beforehand for camera settings like shutter
speed, gain, working distance, resolution, internal illumination and other parameters.
VISOR has been connected to a PC running SensoConfig software from SENSOPART
for configuring the camera. Using this software, separate jobs could also be added for
each task. The task could include detecting a particular sheet pattern, target marker
detection or bend angle measurement. CBun VISOR device added to KR teach pendant
only allows switching of jobs, triggering camera, performing calibration and a few other
tasks. But training to recognise a pattern needs to be done beforehand using a PC.
1.

VISOR to KR1410

Kassow robot is interfaced to the robotic camera using ethernet. CBun Device installed
on KR teach pendant allows for communication between Kassow robot and the VISOR.
It is build and installed using CBun development as mentioned in subsection 3.4.2. The
following ports are used for communications between the Kassow Robot and the VISOR.
• Port 2005, Transmission control protocol TCP (Implicit results, i.e. user-configured
result data)
• Port 2006, Transmission control protocol TCP (Explicit results, e.g. trigger or job
switch)
Figure ?? shows the use of this communication setup to perform auto-calibration with
the Kassow robots and the mounted camera.
2.

VISOR to PLC

PLC is interfaced with the inspection camera using Profinet. UDP (User Datagram
Protocol) is used over ports 161, 34962, 34963, 34964 to establish communication between
the PLC and the VISOR. [66]

4.2.3

Communication between KR1410 Robot, ROS and Web
UI

The communication between the Web UI and the nodejs server happens via HTTP for
standard page loading. The websocket connection through rosbridge provides real-time,
bidirectional data exchange between the real or simulated robot and the web interface.
This allows visualization, monitoring and also control of the robot through web application. Figure ?? shows the communication diagram between ROS, Web application and
the KR.
Page 29

CHAPTER 4: HARDWARE INTEGRATION

Web UI is build using the frontend development tool ReactJS. It utilizes libraries like
roslibjs and ros3djs to visualize or publish on ROS topics which monitors or controls
the robot respectively. Rosbridge acts as a bridge between the web application and the
ROS system. It converts ROS messages into JSON format which can be sent over the
websocket.
ROS nodes uses either TCP/IP or UDP communication protocol. The ROS Master
acts as the central node manager in the ROS network. It coordinates communication
between the robot (KR1410) and other ROS nodes. Here the machine running ROS
provides the ROS master [89] and the KR1410 robot is connected to it through ethernet
where KR ROS support provides few nodes and rostopics through which real robot can
be monitored and controlled. These topics are republished to joint state publisher so that
they can be controlled using MoveIt package. KR1410 could also be simulated in gazebo
software for testing of the web UI. Gazebo also publishes joints on joint states publisher
which are used in ROS and MoveIt to control the robot.
A number of ROS nodes runs on the ROS machine which includes MoveIt nodes,
unloading station gripper controller nodes, visualization rwt for MoveIt controls through
the Web UI, joint state controller, robot state controller, rosbridge, tf2 web publisher etc.
Nodes are written in python or C++. robot state controller publishes the state of the
robot on tf rostopic using joint states and parameter robot description. The tf (transform) rostopic is responsible for managing transforms between different links of the robot.
tf2 web publisher uses this rostopic to recreate the robot in the web application.

4.3

Safety Considerations

Even though the robot chosen is a collaborative robot, the payload is a metal sheet which
poses a safety concern for the human operator. To avoid such scenarios a safety fence is
installed at the boundary of robotic workcell as mentioned in section 3.1.6. Still several
considerations are required for the safe operation of robot in the workcell like the speed
at which the robot should operate. These factors depends on the payload attached to the
robot and the distance between payload and the joint axis 1 or joint axis 2. Following
subsections explains the reasoning behind safety parameters that were considered for the
safe operation of KR1410.

4.3.1

Payload

The pneumatic parellel gripper, manual quick-change system and robotic camera constitutes a weight of 2.0 kg. This is the fixed load on the tool flange center (TFC). The sheet
metal parts counts as the payload. It is a variable load of only 0.1 kg and is thus ignored
for the calculations in 4.3.2.

Page 30

CHAPTER 4: HARDWARE INTEGRATION

The permissible payload is constrained due to the static torque limit of the wrist joints.
The payload is reduced according to the proximity of the payload’s centre of gravity in
relation to joint axis 5, 6 and 7. [49, page 35] Only about 1100 mm out of 1400 mm
of workspace is utilized by the KR in the workcell. Figure ?? illustrates the allowable
payload as a function of distance. It’s evident from this it is safe to operate with a load
a 2.0 kg.

4.3.2

Stopping Distance

The stopping time tbrake and distance sbrake should be kept as low as possible. sbrake is set
at 60 mm and tbrake at 0.2 s for safety reason. According to [49, page 35], the time and
distance it takes to stop the robot, for instance with an emergency stop or protective stop,
depends on the load, speed and configuration of the robot. Conservative estimations of
tbrake and sbrake are made by firstly identifying how fast the slowest joints can decelerate.
This depends on the payload, the direction in which the payload is heading relative to
gravity, and the distance between the load or TFC and joint axis 1 or 2, depending on
whatever distance is the longest. The values can be seen in the Table 4.3.
Load Direction
[kg]
[deg]

0-4

0-40
40-80
80-120
120-160

Distance from Joint axis 1 or 2 to Load center
of gravity or TFC, whichever is larger
800-950 700-800 600-700 500-600 400-500 300-400 0-300
895
1433
1378
1861

1026
1578
1549
2040

1304
1745
1720
2371

1663
2132
2115
2773

2131
2522
2643
3259

2724
3131
3165
3824

3437
3724
4045
4342

Table 4.3: Braking accelerations abrake [deg/s2 ] for KR1410
The stopping time tbrake and stopping distance sbrake can now be conservatively estimated based on the knowledge of the set speed in the robot program and equations 4.2
and 4.3. Joint speed ω is used for Move J and linear speed vmax for Move L and Move S
commands. By default in normal run mode of program, Move J command runs a maximum joint speed of 90 deg/s and Move L command runs a maximum linear speed of 1000
mm/s. This linear speed can be converted to joint speed using the equation 4.1.
ω=

180 vmax
rπ

tbrake =

sbrake =

ω
abrake

[deg s−1 ]

(4.1)

+ 0.020 [s]

(4.2)

tbrake + 0.02
360


πrw

[mm]

(4.3)
Page 31

CHAPTER 4: HARDWARE INTEGRATION

From these equations, it is evident that tbrake and sbrake are directly proportional to ω.
To avoid triggering joint torque value exceeded error and for safe operation of robot, the
joint speed ω is reduced for specifically difficult trajectory execution or when the distance
between joint axis 1 or joint axis 2 and TFC is large. For example, to keep the same tbrake
for a distance of 900 mm between Joint axis 1 and payload but two robot configuration of
0-40 deg and 120-160 deg, joint speed ω must be halved for 0-40 deg robot configuration.

4.3.3

Safety zones

Safety Zones represent virtual boundaries in the robot workspace. The robot will reduce
its speed or stop completely if any part of the robot enters the safety zone. This can be
used for protection of sensitive equipment or areas with human presence. [52, page 96]
A safety zone for unloading station, storage station, bending machine and terminal
operating robot is created. Since the robot can actually touch the floor, an additional
safety zone is added for the floor. The robot will stop immediately if it ever exceeds the
safety zone boundary. It it exceeds, then the operator has to manually move the robotic
arm back inside the safety zone.

4.3.4

Safety functions

Safety functions evaluate external and internal signals of the whole system which can
act immediately to halt the robot or cut him loose from power if necessary. The safety
function of KR complies with EN ISO 13849-1:2015. [21] [52, page 13]
In the main program of teach pendant, there are two sequences programmed to run
in parallel to halt or stop the program if a signal is detected from the PLC. The former
sequence pauses the robot motion and waits for a new signal from PLC to continue the
robot motion from the same configuration while the latter sequence triggers the E-Stop
on the robot and stops the robot immediately.
1.

Protective STOP

The Protective STOP can be used interactively by the operator to pause and continue
the running program. After the protective STOP is released, the program can continue
running its normal operation.
2.

Emergency STOP

The emergency STOP buttons of robot are present at both teach pendant and robot
controller. These buttons are used to engage inbuilt safety measures and halt the robot in
order to prevent a potentially hazardous situation The emergency STOP always provoke
immediate halt of the robot, followed by the power cut to all executive parts of the robot.
Page 32

CHAPTER 4: HARDWARE INTEGRATION

Besides these E-stop buttons, there are three more E-Stop in the workcell. Two are
placed on the bending machine and one on the front panel of unloading station as shown
in figure ??. The emergency stop buttons not only stops the robot but also the bending
machine and unloading station mechatronic system.

Page 33

